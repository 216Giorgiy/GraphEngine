<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />

  <ItemGroup>
    <Test Include="**/*_coreclr.csproj" Exclude="test_coreclr.csproj;**/*exe_coreclr.csproj;**/template/**/*.csproj"/>
    <Exe Include="**/*exe_coreclr.csproj"/>
    <Bak Include="**/*.csproj.bak" Exclude="**/*coreclr*"/>
  </ItemGroup>

  <PropertyGroup>
    <TestRunner>$(MSBuildProjectDirectory)\nunit_tools\bin\nunit_meta_runner.dll</TestRunner>
    <MetaRunner>$(MSBuildProjectDirectory)\nunit_tools\bin\nunitlite-runner.dll</MetaRunner>
  </PropertyGroup>


  <Target Name="Clean">
    <Move SourceFiles="$([System.String]::Copy('%(Bak.Identity)'))" DestinationFiles="$([System.String]::Copy('%(Bak.Identity)').Replace('.csproj.bak', '.csproj'))" />
  </Target>

  <Target Name="Build">


    <!--Exe tests-->
    
    <Exec
        Command="dotnet restore $([System.IO.Path]::GetFileName(%(Exe.Identity)))"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Exe.Identity)))"
        ContinueOnError="false"/>

    <Exec
        Command="dotnet build -c Release $([System.IO.Path]::GetFileName(%(Exe.Identity)))"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Exe.Identity)))"
        ContinueOnError="false"/>

    <Exec
        Command="dotnet run -p $([System.IO.Path]::GetFileName(%(Exe.Identity)))"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Exe.Identity)))"
        ContinueOnError="false" />

    <!--nUnit tests-->

    <Exec
        Command="dotnet restore"
        WorkingDirectory="nunit_tools/nunit_test_runner"
        ContinueOnError="false" />
    <Exec
        Command="dotnet build -c Release --output $(MSBuildProjectDirectory)/nunit_tools/bin"
        WorkingDirectory="nunit_tools/nunit_test_runner"
        ContinueOnError="false" />

    <Exec
        Command="dotnet restore"
        WorkingDirectory="nunit_tools/nunit_meta_runner"
        ContinueOnError="false" />
    <Exec
        Command="dotnet build -c Release --output $(MSBuildProjectDirectory)/nunit_tools/bin"
        WorkingDirectory="nunit_tools/nunit_meta_runner"
        ContinueOnError="false" />

    <RemoveDir Directories="$(MSBuildProjectDirectory)/nunit_coreclr_reports" ContinueOnError="true" />
    <MakeDir Directories="$(MSBuildProjectDirectory)/nunit_coreclr_reports" ContinueOnError="true" />

    <!--<Exec-->
    <!--    Command="dotnet restore $([System.IO.Path]::GetFileName(%(Test.Identity)))"-->
    <!--    WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Test.Identity)))"-->
    <!--    ContinueOnError="false"/>-->

    <Exec
        Command="dotnet build -c Release $([System.IO.Path]::GetFileName(%(Test.Identity)))"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Test.Identity)))"
        ContinueOnError="true" />
    <Exec
        Command="dotnet $(MetaRunner) $(TestRunner) bin/Release/netcoreapp2.0/$([System.IO.Path]::GetFileNameWithoutExtension(%(Test.Identity))).dll --workers=1 --result=$(MSBuildProjectDirectory)/nunit_coreclr_reports/$([System.String]::Copy(%(Test.Identity)).Replace('/','_').Replace('\','_')).xml"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Test.Identity)))"
        ContinueOnError="true" />
  </Target>
</Project>
