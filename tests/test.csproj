<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <ItemGroup>
    <Test Include="**/*.csproj" Exclude="**/*_exe.csproj;**/*_coreclr.csproj;test.csproj;**/template/**/*.csproj;nunit_tools/**/*.csproj"/>
    <Exe Include="**/*_exe.csproj"/>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Target Name="Build">
    <PropertyGroup>
      <!--<ProjectFile>%(Test.Identity)</ProjectFile>
      <ProjectName>$([System.IO.Path]::GetFileNameWithoutExtension(%(Test.Identity)))</ProjectName>
      <ProjectDirectory>$([System.IO.Path]::GetDirectoryName(%(Test.Identity)))</ProjectDirectory>
      <TestDll>bin\Release\$(ProjectName).dll</TestDll>
      <TestExe>bin\Release\$(ProjectName).exe</TestExe>-->
      <NuGet>$(MSBuildProjectDirectory)\packages\NuGet.CommandLine.3.5.0\tools\NuGet</NuGet>
      <NUnitRunner>$(MSBuildProjectDirectory)\packages\NUnit.ConsoleRunner.3.6.1\tools\nunit3-console</NUnitRunner>
    </PropertyGroup>

    <!--Exe tests-->
    <Exec
        Command="$(NuGet) restore -PackagesDirectory $(MSBuildProjectDirectory)\packages"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Exe.Identity)))"
        ContinueOnError="false"/>
    <MSBuild
        Projects="%(Exe.Identity)"
        ContinueOnError="false"
        Properties="Configuration=Release;Platform=AnyCPU" UnloadProjectsOnCompletion="true"/>
    <Exec
        Command="bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(Exe.Identity))).exe"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Exe.Identity)))"
        ContinueOnError="false"
        Condition="Exists('$([System.IO.Path]::GetDirectoryName(%(Exe.Identity)))\bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(Exe.Identity))).exe')"/>

    <!--nUnit tests-->

    <RemoveDir Directories="$(MSBuildProjectDirectory)/nunit_reports" ContinueOnError="true" />
    <MakeDir Directories="$(MSBuildProjectDirectory)/nunit_reports" ContinueOnError="true" />

    <Exec
        Command="$(NuGet) restore -PackagesDirectory $(MSBuildProjectDirectory)\packages"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Test.Identity)))"
        ContinueOnError="false"/>
    <MSBuild
        Projects="%(Test.Identity)"
        ContinueOnError="true"
        Properties="Configuration=Release;Platform=AnyCPU" UnloadProjectsOnCompletion="true"/>
    <Exec
        Command="$(NUnitRunner) bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(Test.Identity))).dll --process=Separate --workers=1 --result=$(MSBuildProjectDirectory)\nunit_reports\$([System.String]::Copy(%(Test.Identity)).Replace('/','_').Replace('\','_')).xml"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Test.Identity)))"
        ContinueOnError="true" Condition="Exists('$([System.IO.Path]::GetDirectoryName(%(Test.Identity)))\bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(Test.Identity))).dll')"/>

    <!--<Exec Command="$(NuGet) restore -PackagesDirectory $(MSBuildProjectDirectory)\packages" WorkingDirectory="$(ProjectDirectory)" ContinueOnError="true"/>-->
    <!--<MSBuild Projects="%(Test.Identity)" ContinueOnError="true" Properties="Configuration=Release;Platform=AnyCPU" UnloadProjectsOnCompletion="true"/>-->
    <!--<Exec Command="$(XUnitRunner) $(TestDll)" WorkingDirectory="$(ProjectDirectory)" ContinueOnError="true" Condition="Exists('$(ProjectDirectory)\$(TestDll)')"/>-->
    <!--<Exec Command="$(TestExe)" WorkingDirectory="$(ProjectDirectory)" ContinueOnError="true" Condition="Exists('$(ProjectDirectory)\$(TestExe)')"/>-->
  </Target>
</Project>
