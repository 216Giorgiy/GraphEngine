<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <ItemGroup>
    <UnitTest Include="**/unittests/**/*.csproj" Exclude="**/*_exe.csproj;**/*_coreclr.csproj"/>
    <StressTest Include="**/stresstests/**/*.csproj" Exclude="**/*_exe.csproj;**/*_coreclr.csproj"/>
    <Exe Include="**/*_exe.csproj"/>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <PropertyGroup>
    <NuGet>$(MSBuildProjectDirectory)\packages\NuGet.CommandLine.3.5.0\tools\NuGet</NuGet>
    <NUnitRunner>$(MSBuildProjectDirectory)\packages\NUnit.ConsoleRunner.3.6.1\tools\nunit3-console</NUnitRunner>
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="RunExeTests;RunUnitTests" />

  <Target Name="RunExeTests">
    <!--Exe tests-->
    <Exec
        Command="$(NuGet) restore -PackagesDirectory $(MSBuildProjectDirectory)\packages"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Exe.Identity)))"
        ContinueOnError="false"/>
    <MSBuild
        Projects="%(Exe.Identity)"
        ContinueOnError="false"
        Properties="Configuration=Release;Platform=AnyCPU" UnloadProjectsOnCompletion="true"/>
    <Exec
        Command="bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(Exe.Identity))).exe"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(Exe.Identity)))"
        ContinueOnError="false"
        Condition="Exists('$([System.IO.Path]::GetDirectoryName(%(Exe.Identity)))\bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(Exe.Identity))).exe')"/>
  </Target>

  <Target Name="RunUnitTests">
    <RemoveDir Directories="$(MSBuildProjectDirectory)/nunit_unit_reports" ContinueOnError="true" />
    <MakeDir Directories="$(MSBuildProjectDirectory)/nunit_unit_reports" ContinueOnError="true" />

    <Exec
        Command="$(NuGet) restore -PackagesDirectory $(MSBuildProjectDirectory)\packages"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(UnitTest.Identity)))"
        ContinueOnError="false"/>
    <MSBuild
        Projects="%(UnitTest.Identity)"
        ContinueOnError="true"
        Properties="Configuration=Release;Platform=AnyCPU" UnloadProjectsOnCompletion="true"/>
    <Exec
        Command="$(NUnitRunner) bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(UnitTest.Identity))).dll --agents=1 --timeout=1800000 --process=Separate --workers=1 --result=$(MSBuildProjectDirectory)\nunit_unit_reports\$([System.String]::Copy(%(UnitTest.Identity)).Replace('/','_').Replace('\','_')).xml"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(UnitTest.Identity)))"
        ContinueOnError="true" Condition="Exists('$([System.IO.Path]::GetDirectoryName(%(UnitTest.Identity)))\bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(UnitTest.Identity))).dll')"/>
  </Target>

  <Target Name="RunStressTests">
    <RemoveDir Directories="$(MSBuildProjectDirectory)/nunit_stress_reports" ContinueOnError="true" />
    <MakeDir Directories="$(MSBuildProjectDirectory)/nunit_stress_reports" ContinueOnError="true" />

    <Exec
        Command="$(NuGet) restore -PackagesDirectory $(MSBuildProjectDirectory)\packages"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(StressTest.Identity)))"
        ContinueOnError="false"/>
    <MSBuild
        Projects="%(StressTest.Identity)"
        ContinueOnError="true"
        Properties="Configuration=Release;Platform=AnyCPU" UnloadProjectsOnCompletion="true"/>
    <Exec
        Command="$(NUnitRunner) bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(StressTest.Identity))).dll --agents=1 --timeout=1800000 --process=Separate --workers=1 --result=$(MSBuildProjectDirectory)\nunit_stress_reports\$([System.String]::Copy(%(StressTest.Identity)).Replace('/','_').Replace('\','_')).xml"
        WorkingDirectory="$([System.IO.Path]::GetDirectoryName(%(StressTest.Identity)))"
        ContinueOnError="true" Condition="Exists('$([System.IO.Path]::GetDirectoryName(%(StressTest.Identity)))\bin\Release\$([System.IO.Path]::GetFileNameWithoutExtension(%(StressTest.Identity))).dll')"/>
  </Target>
</Project>
